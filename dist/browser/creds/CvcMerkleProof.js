'use strict';var _classCallCheck2=require("babel-runtime/helpers/classCallCheck"),_classCallCheck3=_interopRequireDefault(_classCallCheck2),_createClass2=require("babel-runtime/helpers/createClass"),_createClass3=_interopRequireDefault(_createClass2);function _interopRequireDefault(a){return a&&a.__esModule?a:{default:a}}var _=require("lodash"),MerkleTools=require("merkle-tools"),_require=require("../lib/crypto"),sha256=_require.sha256,_require2=require("../claim/Claim"),Claim=_require2.Claim,_require3=require("../services"),services=_require3.services,CvcMerkleProof=function(){function a(b){(0,_classCallCheck3.default)(this,a);var c=a.padTree(b);this.type="CvcMerkleProof2018",this.merkleRoot=null,this.anchor="TBD (Civic Blockchain Attestation)",this.leaves=a.getAllAttestableValue(c),this.buildMerkleTree()}return(0,_createClass3.default)(a,null,[{key:"PADDING_INCREMENTS",get:function(){return 16}}]),(0,_createClass3.default)(a,[{key:"buildMerkleTree",value:function(){var a=this,b=new MerkleTools,c=_.map(this.leaves,function(a){return sha256(a.value)});b.addLeaves(c),b.makeTree(),_.forEach(c,function(c,d){a.leaves[d].targetHash=c,a.leaves[d].node=b.getProof(d)}),this.leaves=_.filter(this.leaves,function(a){return"cvc:Random:node"!==a.identifier}),this.merkleRoot=b.getMerkleRoot().toString("hex")}}],[{key:"padTree",value:function(b){for(var c=b.length,d=c<a.PADDING_INCREMENTS?a.PADDING_INCREMENTS:_.ceil(c/a.PADDING_INCREMENTS)*a.PADDING_INCREMENTS,e=_.clone(b),f=services.container.SecureRandom;e.length<d;)e.push(new Claim("cvc:Random:node",f.wordWith(16)));return e}},{key:"getAllAttestableValue",value:function(a){var b=[];return _.forEach(a,function(a){var c=a.getAttestableValues();b=_.concat(b,c)}),b}}]),a}();module.exports={CvcMerkleProof:CvcMerkleProof};